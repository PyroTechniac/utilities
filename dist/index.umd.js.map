{"version":3,"file":"index.umd.js","sources":["../src/lib/AsyncQueue.ts"],"sourcesContent":["/**\n * The AsyncQueue class used to sequentialize burst requests\n */\nexport class AsyncQueue {\n\t/**\n\t * The remaining amount of queued promises\n\t */\n\tpublic get remaining(): number {\n\t\treturn this.promises.length;\n\t}\n\n\t/**\n\t * The promises array\n\t */\n\tprivate promises: InternalAsyncQueueDeferredPromise[] = [];\n\n\t/**\n\t * Waits for last promise and queues a new one\n\t * @example\n\t * ```\n\t * const queue = new AsyncQueue();\n\t * async function request(url, options) {\n\t *     await queue.wait();\n\t *     try {\n\t *         const result = await fetch(url, options);\n\t *         // Do some operations with 'result'\n\t *     } finally {\n\t *         // Remove first entry from the queue and resolve for the next entry\n\t *         queue.shift();\n\t *     }\n\t * }\n\t *\n\t * request(someUrl1, someOptions1); // Will call fetch() immediately\n\t * request(someUrl2, someOptions2); // Will call fetch() after the first finished\n\t * request(someUrl3, someOptions3); // Will call fetch() after the second finished\n\t * ```\n\t */\n\tpublic wait(): Promise<void> {\n\t\tconst next = this.promises.length ? this.promises[this.promises.length - 1].promise : Promise.resolve();\n\t\tlet resolve: () => void;\n\t\tconst promise = new Promise<void>((res) => {\n\t\t\tresolve = res;\n\t\t});\n\n\t\tthis.promises.push({\n\t\t\tresolve: resolve!,\n\t\t\tpromise\n\t\t});\n\n\t\treturn next;\n\t}\n\n\t/**\n\t * Frees the queue's lock for the next item to process\n\t */\n\tpublic shift(): void {\n\t\tconst deferred = this.promises.shift();\n\t\tif (typeof deferred !== 'undefined') deferred.resolve();\n\t}\n}\n\n/**\n * @internal\n */\ninterface InternalAsyncQueueDeferredPromise {\n\tresolve(): void;\n\tpromise: Promise<void>;\n}\n"],"names":["AsyncQueue","[object Object]","Object","remaining","this","promises","length","next","promise","Promise","resolve","res","push","deferred","shift"],"mappings":"6QAGaA,WAAbC,cAWCC,uFAAwD,KAPxDC,gBACC,OAAOC,KAAKC,SAASC,OA6BfL,OACN,MAAMM,EAAOH,KAAKC,SAASC,OAASF,KAAKC,SAASD,KAAKC,SAASC,OAAS,GAAGE,QAAUC,QAAQC,UAC9F,IAAIA,EACJ,MAAMF,EAAU,IAAIC,SAAeE,IAClCD,EAAUC,KAQX,OALAP,KAAKC,SAASO,KAAK,CAClBF,QAASA,EACTF,QAAAA,IAGMD,EAMDN,QACN,MAAMY,EAAWT,KAAKC,SAASS,aACP,IAAbD,GAA0BA,EAASH"}